% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotInteractive2DPlot.R
\name{plotInteractive2DPlot}
\alias{plotInteractive2DPlot}
\title{Generates dynamic 2D plot based on the RTF parameters for multiple time 
courses}
\usage{
plotInteractive2DPlot(
  dim1Vec,
  dim2Vec,
  ID,
  species,
  RTFmodelLst,
  metaInfo = c(),
  plotLines = TRUE,
  hRatio = 0,
  vRatio = 0
)
}
\arguments{
\item{dim1Vec}{Vector with values of first dimension.}

\item{dim2Vec}{Vector with values of second dimension. Has same length of 
dim1Vec}

\item{ID}{Vector with unique identifiers with same length as dim1Vec and 
dim2Vec.}

\item{species}{Vector with names of molecular species with same length as 
dim1Vec and dim2Vec.}

\item{RTFmodelLst}{List with the RTF result for each time course.}

\item{metaInfo}{(Optional) Vector specifying  meta information for
each time course. Needs to have the same length as the number of rows of 
param.df.}

\item{plotLines}{Boolean indicating if lines should be plotted between 
species of the same name (Default: TRUE). Can only be plotted if there are 
two time courses per species.}

\item{hRatio}{Float between 0 and 1 indicating where subplot should be placed
horizontally in relation to plot width (Default: 0).}

\item{vRatio}{Float between 0 and 1 indicating where subplot should be placed
vertically in relation to plot height (Default: 0).}
}
\value{
Plotly object of the dynamic 2D plot.
}
\description{
Generates dynamic 2D plot based on the RTF parameters for 
multiple time courses, where each point corresponds to a single time course. 
By hovering over a point the corresponding time-resolved behavior is 
displayed in an additional smaller subplot.
}
\examples{
\dontrun{
data(almaden)
timeCourses <- almaden # first column needs to be "time"
colNames <- colnames(timeCourses[2:ncol(timeCourses)])
species <- sub("_[^_]+$", "", colNames)
conditionID <- gsub(".*_", "", colNames)

# # We don't run the following lines as the required object almadenModelLst 
# # is available as an example (data(almadenModelLst)).
# fileString <- "almadenExampleFile"
# params.lst <- getParamsFromMultipleTimeCourses(
#   df = almaden,
#   fileString = fileString,
#   saveFolderPath = tempdir(),
#   nInitialGuesses = 50
# )
# param.df <- params.lst[["param.df"]]
# RTFmodelLst <- params.lst[["RTFmodelLst"]]

data(almadenParams)
data(almadenModelLst)
param.df <- almadenParams
RTFmodelLst <- almadenModelLst
plots <- plotLowDimensionalRTF(
  df = param.df,
  metaInfo = species, 
  metaInfoName = "Species",
  maxTime = max(timeCourses$time),
  numClust = NULL
)
    
df.umapData <- plots[["umap.data"]]
clustID <- df.umapData$clustID
ID <- row.names(df.umapData)
plt <- plotInteractive2DPlot(dim1Vec = df.umapData$UMAP1,
                        dim2Vec = df.umapData$UMAP2,
                        ID = ID,
                        species = species,
                        RTFmodelLst = RTFmodelLst,
                        metaInfo = conditionID, # alternatively: clustID
                        hRatio = 0, 
                        vRatio = 0
)
}
}
