% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/objFunct.R
\name{objFunct}
\alias{objFunct}
\title{Chi square optimization function}
\usage{
objFunct(par, data, optimObject)
}
\arguments{
\item{par}{Initial values for the parameters to be optimized over.}

\item{data}{Data frame containing columns named 't' (time), 'y' (quantitative
value) and optionally 'sdExp' (standard deviation of the experimental data)}

\item{optimObject}{optimObject}
}
\value{
List of best set of parameters, optimization value, etc.
See stats::optim for more details.
}
\description{
Chi square optimization function
}
\examples{
data <- getExampleDf()
optimObject.orig <- initializeOptimObject(data,
                        modus = 'RetardedTransientDynamics')
optimObject.orig$fixed[["signum_TF"]] <- 1
optimObject.orig$fixed[["tau_2"]] <- 0.5
nInitialGuesses <- 50
initialGuess.vec.lst <- getInitialGuessVec(
                            initialGuess.vec =
                                    optimObject.orig$initialGuess.vec,
                            lb.vec = optimObject.orig$lb.vec,
                            ub.vec = optimObject.orig$ub.vec,
                            nInitialGuesses = nInitialGuesses
 )
optimObject.tmp <- optimObject.orig

# Remove each fixedParam from vec, optimObject$lb.vec, and optimObject$ub.vec
for (el in
      c("tau_1", "tau_2", "A_sus", "A_trans", "p_0", "T_shift", "sigma")){
  if (!is.na(optimObject.tmp$fixed[[el]])){
    optimObject.tmp$lb.vec <-
         optimObject.tmp$lb.vec[-which(names(optimObject.tmp$lb.vec) == el)]
    optimObject.tmp$ub.vec <-
         optimObject.tmp$ub.vec[-which(names(optimObject.tmp$ub.vec) == el)]

    # remove from each sublist in initialGuess.vec.lst
    initialGuess.vec.lst <- lapply(initialGuess.vec.lst,
                                       function(x) x[-which(names(x) == el)])
  }
}

vec <- initialGuess.vec.lst[[1]]

optimResTmp <- stats::optim(par = vec,
                            fn = objFunct,
                            method = "L-BFGS-B",
                            lower = optimObject.tmp$lb.vec,
                            upper = optimObject.tmp$ub.vec,
                            data = optimObject.tmp$data,
                            optimObject = optimObject.tmp,
                            control = optimObject.tmp$control)
}
